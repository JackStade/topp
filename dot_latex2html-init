# Symbolic link this file to ~/.latex2html-init
# for latex2html to do the right thing.

#$ACCENT_IMAGES = 'large';

##############################################################################

# The bibliographic references, the appendices, the lists of figures and tables
# etc. must appear in the contents table at the same level as the outermost
# sectioning command. This subroutine finds what is the outermost level and
# sets the above to the same level;
sub set_depth_levels {
    # Sets $outermost_level
    local($level);
    #RRM:  do not alter user-set value for  $MAX_SPLIT_DEPTH
    foreach $level ("part", "chapter", "section", "subsection",
                    "subsubsection", "paragraph") {
        last if (($outermost_level) = /\\($level)$delimiter_rx/);
        last if (($outermost_level) = /\\endsegment\s*\[\s*($level)\s*\]/s);
        if (/\\segment\s*($O\d+$C)[^<]+\1\s*($O\d+$C)\s*($level)\s*\2/s)
                { $outermost_level = $3; last };
    }
    $level = ($outermost_level ? $section_commands{$outermost_level} :
              do {$outermost_level = 'section'; 3;});

    #RRM:  but calculate value for $MAX_SPLIT_DEPTH when a $REL_DEPTH was given
    if ($REL_DEPTH && $MAX_SPLIT_DEPTH) {
        $MAX_SPLIT_DEPTH = $level + $MAX_SPLIT_DEPTH;
    } elsif (!($MAX_SPLIT_DEPTH)) { $MAX_SPLIT_DEPTH = 1 };

    %unnumbered_section_commands = (
          'tableofcontents', $level
        , 'listoffigures', $level
        , 'listoftables', $level
        , 'bibliography', ($level+1)  #ERIK
        , 'textohtmlindex', $level
        , %unnumbered_section_commands
        );

    %section_commands = (
          %unnumbered_section_commands
        , %section_commands
        );
}

##############################################################################

my $last_title = "";

my %lookup = (
  'Introduction' => 'introduction',
  'List of Categories' => 'categories',
  'Categorized List of All Problems' => 'problems_by_category',
  'Numerical List of All Problems' => 'problems_by_number',
);

sub custom_title_hook {
  my ($section_title) = (@_);
  if ($section_title =~ /^Problem (\d+):/) {
    $last_title = "P$1";
    return $last_title;
  } elsif ($section_title =~ /Bibliography/) { # note: not entire string
    return $last_title . "bib";
  } elsif (exists $lookup{$section_title}) {
    return $lookup{$section_title};
  } else {
    return ""; # node<num>
  }
}
